C:\Users\DominikJain\miniconda3\envs\pop\python.exe C:\Users\DominikJain\Dev\beyond-jupyter\refactoring-journey\step08-high-level-evaluation\run_classifier_evaluation.py
INFO  2024-04-17 12:18:53,178 sensai.util.logging:run_main - Starting
INFO  2024-04-17 12:18:53,178 songpop.data:load_data_frame - Loading Dataset[num_samples=10000, threshold_popular=50, drop_zero_popularity=False, random_seed=42, class_positive=popular, class_negative=unpopular] from data\spotify_data.csv
INFO  2024-04-17 12:18:55,054 sensai.evaluation.eval_util:compare_models - Evaluating model 1/10 named 'LogisticRegression-orig' ...
DEBUG 2024-04-17 12:18:55,056 sensai.evaluation.evaluator:__init__ - <sensai.data.DataSplitterFractional object at 0x00000219470BE6B0> created split with 7000 (70.00%) and 3000 (30.00%) training and test data points respectively
INFO  2024-04-17 12:18:55,056 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating SkLearnLogisticRegressionVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390976], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589390976], name=LogisticRegression-orig, modelConstructor=LogisticRegression(random_state=42, solver=lbfgs, max_iter=1000)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:55,056 sensai.vector_model:fit - Fitting SkLearnLogisticRegressionVectorClassificationModel instance
DEBUG 2024-04-17 12:18:55,056 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390976]
DEBUG 2024-04-17 12:18:55,059 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[14]=[year/float64, danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, key/float64, mode/float64, tempo/float64, time_signature/float64, loudness/float64, duration_ms/float64]; N=7000 data points
INFO  2024-04-17 12:18:55,059 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type LogisticRegression
INFO  2024-04-17 12:18:55,080 sensai.vector_model:fit - Fitting completed in 0.02 seconds: SkLearnLogisticRegressionVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390976], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589390976], name=LogisticRegression-orig, model=LogisticRegression(max_iter=1000, random_state=42)]
DEBUG 2024-04-17 12:18:55,081 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390976]
INFO  2024-04-17 12:18:55,144 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9513333333333334, balancedAccuracy=0.5, precision[popular]=0.0, recall[popular]=0.0, F1[popular]=0.0, N=3000]
INFO  2024-04-17 12:18:55,176 sensai.evaluation.eval_util:compare_models - Evaluating model 2/10 named 'LogisticRegression' ...
INFO  2024-04-17 12:18:55,176 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating SkLearnLogisticRegressionVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=LogisticRegression, modelConstructor=LogisticRegression(random_state=42, solver=lbfgs, max_iter=1000)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:55,176 sensai.vector_model:fit - Fitting SkLearnLogisticRegressionVectorClassificationModel instance
DEBUG 2024-04-17 12:18:55,176 sensai.featuregen.feature_generator:fit_generate - Fitting and generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:55,176 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:55,177 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:55,180 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:55,180 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:55,181 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:55,181 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
DEBUG 2024-04-17 12:18:55,232 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[107]=[danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, tempo/float64, duration_ms/float64, loudness/float64, year/float64, genre_0/float64, genre_1/float64, genre_2/float64, genre_3/float64, genre_4/float64, genre_5/float64, genre_6/float64, genre_7/float64, genre_8/float64, genre_9/float64, genre_10/float64, genre_11/float64, genre_12/float64, genre_13/float64, genre_14/float64, genre_15/float64, genre_16/float64, genre_17/float64, genre_18/float64, genre_19/float64, genre_20/float64, genre_21/float64, genre_22/float64, genre_23/float64, genre_24/float64, genre_25/float64, genre_26/float64, genre_27/float64, genre_28/float64, genre_29/float64, genre_30/float64, genre_31/float64, genre_32/float64, genre_33/float64, genre_34/float64, genre_35/float64, genre_36/float64, genre_37/float64, genre_38/float64, genre_39/float64, genre_40/float64, genre_41/float64, genre_42/float64, genre_43/float64, genre_44/float64, genre_45/float64, genre_46/float64, genre_47/float64, genre_48/float64, genre_49/float64, genre_50/float64, genre_51/float64, genre_52/float64, genre_53/float64, genre_54/float64, genre_55/float64, genre_56/float64, genre_57/float64, genre_58/float64, genre_59/float64, genre_60/float64, genre_61/float64, genre_62/float64, genre_63/float64, genre_64/float64, genre_65/float64, genre_66/float64, genre_67/float64, genre_68/float64, genre_69/float64, genre_70/float64, genre_71/float64, genre_72/float64, genre_73/float64, genre_74/float64, genre_75/float64, genre_76/float64, genre_77/float64, genre_78/float64, genre_79/float64, genre_80/float64, genre_81/float64, key_0/float64, key_1/float64, key_2/float64, key_3/float64, key_4/float64, key_5/float64, key_6/float64, key_7/float64, key_8/float64, key_9/float64, key_10/float64, key_11/float64, mode_0/float64, mode_1/float64]; N=7000 data points
INFO  2024-04-17 12:18:55,233 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type LogisticRegression
INFO  2024-04-17 12:18:55,276 sensai.vector_model:fit - Fitting completed in 0.10 seconds: SkLearnLogisticRegressionVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=LogisticRegression, model=LogisticRegression(max_iter=1000, random_state=42)]
DEBUG 2024-04-17 12:18:55,277 sensai.featuregen.feature_generator:generate - Generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:55,277 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:55,277 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:55,278 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:55,280 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:55,280 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:55,280 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
INFO  2024-04-17 12:18:55,363 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9573333333333334, balancedAccuracy=0.6006374134835991, precision[popular]=0.7142857142857143, recall[popular]=0.2054794520547945, F1[popular]=0.3191489361702127, N=3000]
INFO  2024-04-17 12:18:55,396 sensai.evaluation.eval_util:compare_models - Evaluating model 3/10 named 'KNeighbors-orig' ...
INFO  2024-04-17 12:18:55,396 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating SkLearnKNeighborsVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390592], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589390592], name=KNeighbors-orig, modelConstructor=KNeighborsClassifier(n_neighbors=1)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:55,396 sensai.vector_model:fit - Fitting SkLearnKNeighborsVectorClassificationModel instance
DEBUG 2024-04-17 12:18:55,396 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390592]
DEBUG 2024-04-17 12:18:55,400 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[14]=[year/float64, danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, key/float64, mode/float64, tempo/float64, time_signature/float64, loudness/float64, duration_ms/float64]; N=7000 data points
INFO  2024-04-17 12:18:55,400 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type KNeighborsClassifier
C:\Users\DominikJain\miniconda3\envs\pop\lib\site-packages\sklearn\base.py:464: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(
INFO  2024-04-17 12:18:55,409 sensai.vector_model:fit - Fitting completed in 0.01 seconds: SkLearnKNeighborsVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390592], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589390592], name=KNeighbors-orig, model=KNeighborsClassifier(n_neighbors=1)]
DEBUG 2024-04-17 12:18:55,409 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589390592]
INFO  2024-04-17 12:18:55,659 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9113333333333333, balancedAccuracy=0.5439661710072861, precision[popular]=0.125, recall[popular]=0.136986301369863, F1[popular]=0.13071895424836602, N=3000]
INFO  2024-04-17 12:18:55,690 sensai.evaluation.eval_util:compare_models - Evaluating model 4/10 named 'KNeighbors' ...
INFO  2024-04-17 12:18:55,690 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating SkLearnKNeighborsVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=KNeighbors, modelConstructor=KNeighborsClassifier(n_neighbors=1)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:55,690 sensai.vector_model:fit - Fitting SkLearnKNeighborsVectorClassificationModel instance
DEBUG 2024-04-17 12:18:55,690 sensai.featuregen.feature_generator:fit_generate - Fitting and generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:55,690 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:55,691 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:55,692 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:55,692 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:55,693 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:55,693 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
DEBUG 2024-04-17 12:18:55,763 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[107]=[danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, tempo/float64, duration_ms/float64, loudness/float64, year/float64, genre_0/float64, genre_1/float64, genre_2/float64, genre_3/float64, genre_4/float64, genre_5/float64, genre_6/float64, genre_7/float64, genre_8/float64, genre_9/float64, genre_10/float64, genre_11/float64, genre_12/float64, genre_13/float64, genre_14/float64, genre_15/float64, genre_16/float64, genre_17/float64, genre_18/float64, genre_19/float64, genre_20/float64, genre_21/float64, genre_22/float64, genre_23/float64, genre_24/float64, genre_25/float64, genre_26/float64, genre_27/float64, genre_28/float64, genre_29/float64, genre_30/float64, genre_31/float64, genre_32/float64, genre_33/float64, genre_34/float64, genre_35/float64, genre_36/float64, genre_37/float64, genre_38/float64, genre_39/float64, genre_40/float64, genre_41/float64, genre_42/float64, genre_43/float64, genre_44/float64, genre_45/float64, genre_46/float64, genre_47/float64, genre_48/float64, genre_49/float64, genre_50/float64, genre_51/float64, genre_52/float64, genre_53/float64, genre_54/float64, genre_55/float64, genre_56/float64, genre_57/float64, genre_58/float64, genre_59/float64, genre_60/float64, genre_61/float64, genre_62/float64, genre_63/float64, genre_64/float64, genre_65/float64, genre_66/float64, genre_67/float64, genre_68/float64, genre_69/float64, genre_70/float64, genre_71/float64, genre_72/float64, genre_73/float64, genre_74/float64, genre_75/float64, genre_76/float64, genre_77/float64, genre_78/float64, genre_79/float64, genre_80/float64, genre_81/float64, key_0/float64, key_1/float64, key_2/float64, key_3/float64, key_4/float64, key_5/float64, key_6/float64, key_7/float64, key_8/float64, key_9/float64, key_10/float64, key_11/float64, mode_0/float64, mode_1/float64]; N=7000 data points
INFO  2024-04-17 12:18:55,764 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type KNeighborsClassifier
INFO  2024-04-17 12:18:55,770 sensai.vector_model:fit - Fitting completed in 0.08 seconds: SkLearnKNeighborsVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=KNeighbors, model=KNeighborsClassifier(n_neighbors=1)]
DEBUG 2024-04-17 12:18:55,771 sensai.featuregen.feature_generator:generate - Generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:55,771 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:55,771 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:55,773 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:55,773 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:55,773 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:55,773 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
C:\Users\DominikJain\miniconda3\envs\pop\lib\site-packages\sklearn\base.py:464: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(
INFO  2024-04-17 12:18:56,064 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9346666666666666, balancedAccuracy=0.6212189572913767, precision[popular]=0.3076923076923077, recall[popular]=0.273972602739726, F1[popular]=0.2898550724637681, N=3000]
INFO  2024-04-17 12:18:56,098 sensai.evaluation.eval_util:compare_models - Evaluating model 5/10 named 'RandomForest-orig' ...
INFO  2024-04-17 12:18:56,098 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating SkLearnRandomForestVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589391888], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589391888], name=RandomForest-orig, modelConstructor=RandomForestClassifier(random_state=42, min_samples_leaf=1, n_estimators=100)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:56,098 sensai.vector_model:fit - Fitting SkLearnRandomForestVectorClassificationModel instance
DEBUG 2024-04-17 12:18:56,098 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589391888]
DEBUG 2024-04-17 12:18:56,101 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[14]=[year/float64, danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, key/float64, mode/float64, tempo/float64, time_signature/float64, loudness/float64, duration_ms/float64]; N=7000 data points
INFO  2024-04-17 12:18:56,102 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type RandomForestClassifier
INFO  2024-04-17 12:18:57,598 sensai.vector_model:fit - Fitting completed in 1.50 seconds: SkLearnRandomForestVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589391888], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589391888], name=RandomForest-orig, model=RandomForestClassifier(random_state=42)]
DEBUG 2024-04-17 12:18:57,599 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589391888]
INFO  2024-04-17 12:18:57,694 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.951, balancedAccuracy=0.4998248072880168, precision[popular]=0.0, recall[popular]=0.0, F1[popular]=0.0, N=3000]
INFO  2024-04-17 12:18:57,730 sensai.evaluation.eval_util:compare_models - Evaluating model 6/10 named 'RandomForest' ...
INFO  2024-04-17 12:18:57,730 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating SkLearnRandomForestVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=RandomForest, modelConstructor=RandomForestClassifier(random_state=42, min_samples_leaf=1, n_estimators=100)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:57,730 sensai.vector_model:fit - Fitting SkLearnRandomForestVectorClassificationModel instance
DEBUG 2024-04-17 12:18:57,730 sensai.featuregen.feature_generator:fit_generate - Fitting and generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:57,730 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:57,731 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:57,732 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:57,733 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:57,733 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:57,734 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
DEBUG 2024-04-17 12:18:57,758 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[107]=[danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, tempo/float64, duration_ms/int64, loudness/float64, year/int64, genre_0/float64, genre_1/float64, genre_2/float64, genre_3/float64, genre_4/float64, genre_5/float64, genre_6/float64, genre_7/float64, genre_8/float64, genre_9/float64, genre_10/float64, genre_11/float64, genre_12/float64, genre_13/float64, genre_14/float64, genre_15/float64, genre_16/float64, genre_17/float64, genre_18/float64, genre_19/float64, genre_20/float64, genre_21/float64, genre_22/float64, genre_23/float64, genre_24/float64, genre_25/float64, genre_26/float64, genre_27/float64, genre_28/float64, genre_29/float64, genre_30/float64, genre_31/float64, genre_32/float64, genre_33/float64, genre_34/float64, genre_35/float64, genre_36/float64, genre_37/float64, genre_38/float64, genre_39/float64, genre_40/float64, genre_41/float64, genre_42/float64, genre_43/float64, genre_44/float64, genre_45/float64, genre_46/float64, genre_47/float64, genre_48/float64, genre_49/float64, genre_50/float64, genre_51/float64, genre_52/float64, genre_53/float64, genre_54/float64, genre_55/float64, genre_56/float64, genre_57/float64, genre_58/float64, genre_59/float64, genre_60/float64, genre_61/float64, genre_62/float64, genre_63/float64, genre_64/float64, genre_65/float64, genre_66/float64, genre_67/float64, genre_68/float64, genre_69/float64, genre_70/float64, genre_71/float64, genre_72/float64, genre_73/float64, genre_74/float64, genre_75/float64, genre_76/float64, genre_77/float64, genre_78/float64, genre_79/float64, genre_80/float64, genre_81/float64, key_0/float64, key_1/float64, key_2/float64, key_3/float64, key_4/float64, key_5/float64, key_6/float64, key_7/float64, key_8/float64, key_9/float64, key_10/float64, key_11/float64, mode_0/float64, mode_1/float64]; N=7000 data points
INFO  2024-04-17 12:18:57,758 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type RandomForestClassifier
INFO  2024-04-17 12:18:59,003 sensai.vector_model:fit - Fitting completed in 1.27 seconds: SkLearnRandomForestVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=RandomForest, model=RandomForestClassifier(random_state=42)]
DEBUG 2024-04-17 12:18:59,003 sensai.featuregen.feature_generator:generate - Generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:59,004 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:59,004 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:59,006 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:59,006 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:59,006 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:59,007 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
INFO  2024-04-17 12:18:59,122 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9573333333333334, balancedAccuracy=0.5778911597277553, precision[popular]=0.8214285714285714, recall[popular]=0.15753424657534246, F1[popular]=0.26436781609195403, N=3000]
INFO  2024-04-17 12:18:59,155 sensai.evaluation.eval_util:compare_models - Evaluating model 7/10 named 'DecisionTree-orig' ...
INFO  2024-04-17 12:18:59,155 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating SkLearnDecisionTreeVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589395296], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589395296], name=DecisionTree-orig, modelConstructor=DecisionTreeClassifier(min_samples_leaf=1, random_state=42, max_depth=2)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:59,155 sensai.vector_model:fit - Fitting SkLearnDecisionTreeVectorClassificationModel instance
DEBUG 2024-04-17 12:18:59,155 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589395296]
DEBUG 2024-04-17 12:18:59,158 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[14]=[year/float64, danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, key/float64, mode/float64, tempo/float64, time_signature/float64, loudness/float64, duration_ms/float64]; N=7000 data points
INFO  2024-04-17 12:18:59,159 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type DecisionTreeClassifier
INFO  2024-04-17 12:18:59,175 sensai.vector_model:fit - Fitting completed in 0.02 seconds: SkLearnDecisionTreeVectorClassificationModel[featureGenerator=FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589395296], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=False, featureGeneratorNames=[FeatureGeneratorTakeColumns-2307589395296], name=DecisionTree-orig, model=DecisionTreeClassifier(max_depth=2, random_state=42)]
DEBUG 2024-04-17 12:18:59,175 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year, danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence, key, mode, tempo, time_signature, loudness, duration_ms], exceptColumns=(), verifyColumnNames=True, name=FeatureGeneratorTakeColumns-2307589395296]
INFO  2024-04-17 12:18:59,242 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9513333333333334, balancedAccuracy=0.5, precision[popular]=0.0, recall[popular]=0.0, F1[popular]=0.0, N=3000]
INFO  2024-04-17 12:18:59,275 sensai.evaluation.eval_util:compare_models - Evaluating model 8/10 named 'XGBoost' ...
INFO  2024-04-17 12:18:59,275 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating XGBGradientBoostedVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=True, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=XGBoost, modelConstructor=XGBClassifier(random_state=42, min_child_weight=None)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:59,275 sensai.vector_model:fit - Fitting XGBGradientBoostedVectorClassificationModel instance
DEBUG 2024-04-17 12:18:59,275 sensai.featuregen.feature_generator:fit_generate - Fitting and generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:59,275 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:59,276 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:59,278 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:59,279 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:59,279 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:59,279 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
DEBUG 2024-04-17 12:18:59,303 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[107]=[danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, tempo/float64, duration_ms/int64, loudness/float64, year/int64, genre_0/float64, genre_1/float64, genre_2/float64, genre_3/float64, genre_4/float64, genre_5/float64, genre_6/float64, genre_7/float64, genre_8/float64, genre_9/float64, genre_10/float64, genre_11/float64, genre_12/float64, genre_13/float64, genre_14/float64, genre_15/float64, genre_16/float64, genre_17/float64, genre_18/float64, genre_19/float64, genre_20/float64, genre_21/float64, genre_22/float64, genre_23/float64, genre_24/float64, genre_25/float64, genre_26/float64, genre_27/float64, genre_28/float64, genre_29/float64, genre_30/float64, genre_31/float64, genre_32/float64, genre_33/float64, genre_34/float64, genre_35/float64, genre_36/float64, genre_37/float64, genre_38/float64, genre_39/float64, genre_40/float64, genre_41/float64, genre_42/float64, genre_43/float64, genre_44/float64, genre_45/float64, genre_46/float64, genre_47/float64, genre_48/float64, genre_49/float64, genre_50/float64, genre_51/float64, genre_52/float64, genre_53/float64, genre_54/float64, genre_55/float64, genre_56/float64, genre_57/float64, genre_58/float64, genre_59/float64, genre_60/float64, genre_61/float64, genre_62/float64, genre_63/float64, genre_64/float64, genre_65/float64, genre_66/float64, genre_67/float64, genre_68/float64, genre_69/float64, genre_70/float64, genre_71/float64, genre_72/float64, genre_73/float64, genre_74/float64, genre_75/float64, genre_76/float64, genre_77/float64, genre_78/float64, genre_79/float64, genre_80/float64, genre_81/float64, key_0/float64, key_1/float64, key_2/float64, key_3/float64, key_4/float64, key_5/float64, key_6/float64, key_7/float64, key_8/float64, key_9/float64, key_10/float64, key_11/float64, mode_0/float64, mode_1/float64]; N=7000 data points
INFO  2024-04-17 12:18:59,304 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type XGBClassifier
INFO  2024-04-17 12:18:59,545 sensai.vector_model:fit - Fitting completed in 0.27 seconds: XGBGradientBoostedVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=True, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR], name=XGBoost, model=XGBClassifier(base_score=None, booster=None, callbacks=None, colsample_bylevel=None, colsample_bynode=None, colsample_bytree=None, early_stopping_rounds=None, enable_categorical=False, eval_metric=None, feature_types=None, gamma=None, gpu_id=None, grow_policy=None, importance_type=None, interaction_constraints=None, learning_rate=None, max_bin=None, max_cat_threshold=None, max_cat_to_onehot=None, max_delta_step=None, max_depth=None, max_leaves=None, min_child_weight=None, missing=nan, monotone_constraints=None, n_estimators=100, n_jobs=None, num_parallel_tree=None, predictor=None, random_state=42, ...)]
DEBUG 2024-04-17 12:18:59,546 sensai.featuregen.feature_generator:generate - Generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]]]
DEBUG 2024-04-17 12:18:59,546 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:59,547 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:59,550 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:59,550 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:59,550 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:59,551 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
INFO  2024-04-17 12:18:59,690 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.958, balancedAccuracy=0.630232982307936, precision[popular]=0.6724137931034483, recall[popular]=0.2671232876712329, F1[popular]=0.3823529411764706, N=3000]
INFO  2024-04-17 12:18:59,725 sensai.evaluation.eval_util:compare_models - Evaluating model 9/10 named 'XGBoost-meanArtistFreqPopular' ...
INFO  2024-04-17 12:18:59,725 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating XGBGradientBoostedVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR], FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=True, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR, MEAN_ARTIST_FREQ_POPULAR], name=XGBoost-meanArtistFreqPopular, modelConstructor=XGBClassifier(random_state=42, min_child_weight=None)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:18:59,726 sensai.vector_model:fit - Fitting XGBGradientBoostedVectorClassificationModel instance
DEBUG 2024-04-17 12:18:59,726 sensai.featuregen.feature_generator:fit_generate - Fitting and generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR], FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]]
DEBUG 2024-04-17 12:18:59,726 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:18:59,726 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:18:59,728 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:18:59,728 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:18:59,729 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:18:59,729 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
DEBUG 2024-04-17 12:18:59,729 sensai.featuregen.feature_generator:fit - Fitting FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]
DEBUG 2024-04-17 12:18:59,737 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]
DEBUG 2024-04-17 12:19:00,121 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[108]=[danceability/float64, energy/float64, speechiness/float64, acousticness/float64, instrumentalness/float64, liveness/float64, valence/float64, tempo/float64, duration_ms/int64, loudness/float64, year/int64, mean_artist_popularity/float64, genre_0/float64, genre_1/float64, genre_2/float64, genre_3/float64, genre_4/float64, genre_5/float64, genre_6/float64, genre_7/float64, genre_8/float64, genre_9/float64, genre_10/float64, genre_11/float64, genre_12/float64, genre_13/float64, genre_14/float64, genre_15/float64, genre_16/float64, genre_17/float64, genre_18/float64, genre_19/float64, genre_20/float64, genre_21/float64, genre_22/float64, genre_23/float64, genre_24/float64, genre_25/float64, genre_26/float64, genre_27/float64, genre_28/float64, genre_29/float64, genre_30/float64, genre_31/float64, genre_32/float64, genre_33/float64, genre_34/float64, genre_35/float64, genre_36/float64, genre_37/float64, genre_38/float64, genre_39/float64, genre_40/float64, genre_41/float64, genre_42/float64, genre_43/float64, genre_44/float64, genre_45/float64, genre_46/float64, genre_47/float64, genre_48/float64, genre_49/float64, genre_50/float64, genre_51/float64, genre_52/float64, genre_53/float64, genre_54/float64, genre_55/float64, genre_56/float64, genre_57/float64, genre_58/float64, genre_59/float64, genre_60/float64, genre_61/float64, genre_62/float64, genre_63/float64, genre_64/float64, genre_65/float64, genre_66/float64, genre_67/float64, genre_68/float64, genre_69/float64, genre_70/float64, genre_71/float64, genre_72/float64, genre_73/float64, genre_74/float64, genre_75/float64, genre_76/float64, genre_77/float64, genre_78/float64, genre_79/float64, genre_80/float64, genre_81/float64, key_0/float64, key_1/float64, key_2/float64, key_3/float64, key_4/float64, key_5/float64, key_6/float64, key_7/float64, key_8/float64, key_9/float64, key_10/float64, key_11/float64, mode_0/float64, mode_1/float64]; N=7000 data points
INFO  2024-04-17 12:19:00,121 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type XGBClassifier
INFO  2024-04-17 12:19:00,377 sensai.vector_model:fit - Fitting completed in 0.65 seconds: XGBGradientBoostedVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR], FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=True, featureGeneratorNames=[MUSICAL_DEGREES, MUSICAL_CATEGORIES, TEMPO, DURATION, LOUDNESS, YEAR, MEAN_ARTIST_FREQ_POPULAR], name=XGBoost-meanArtistFreqPopular, model=XGBClassifier(base_score=None, booster=None, callbacks=None, colsample_bylevel=None, colsample_bynode=None, colsample_bytree=None, early_stopping_rounds=None, enable_categorical=False, eval_metric=None, feature_types=None, gamma=None, gpu_id=None, grow_policy=None, importance_type=None, interaction_constraints=None, learning_rate=None, max_bin=None, max_cat_threshold=None, max_cat_to_onehot=None, max_delta_step=None, max_depth=None, max_leaves=None, min_child_weight=None, missing=nan, monotone_constraints=None, n_estimators=100, n_jobs=None, num_parallel_tree=None, predictor=None, random_state=42, ...)]
DEBUG 2024-04-17 12:19:00,378 sensai.featuregen.feature_generator:generate - Generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES], FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES], FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO], FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION], FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS], FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR], FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]]
DEBUG 2024-04-17 12:19:00,378 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_DEGREES]
DEBUG 2024-04-17 12:19:00,379 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[genre, key, mode], exceptColumns=(), verifyColumnNames=True, name=MUSICAL_CATEGORIES]
DEBUG 2024-04-17 12:19:00,381 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[tempo], exceptColumns=(), verifyColumnNames=True, name=TEMPO]
DEBUG 2024-04-17 12:19:00,381 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[duration_ms], exceptColumns=(), verifyColumnNames=True, name=DURATION]
DEBUG 2024-04-17 12:19:00,381 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[loudness], exceptColumns=(), verifyColumnNames=True, name=LOUDNESS]
DEBUG 2024-04-17 12:19:00,382 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorTakeColumns[columns=[year], exceptColumns=(), verifyColumnNames=True, name=YEAR]
DEBUG 2024-04-17 12:19:00,382 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]
INFO  2024-04-17 12:19:00,590 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9553333333333334, balancedAccuracy=0.6255819757898071, precision[popular]=0.59375, recall[popular]=0.2602739726027397, F1[popular]=0.3619047619047619, N=3000]
INFO  2024-04-17 12:19:00,624 sensai.evaluation.eval_util:compare_models - Evaluating model 10/10 named 'XGBoost-meanArtistFreqPopularOnly' ...
INFO  2024-04-17 12:19:00,624 sensai.evaluation.eval_util:perform_simple_evaluation - Evaluating XGBGradientBoostedVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=True, featureGeneratorNames=[MEAN_ARTIST_FREQ_POPULAR], name=XGBoost-meanArtistFreqPopularOnly, modelConstructor=XGBClassifier(random_state=42, min_child_weight=None)] via <sensai.evaluation.evaluator.VectorClassificationModelEvaluator object at 0x00000219470BE680>
INFO  2024-04-17 12:19:00,624 sensai.vector_model:fit - Fitting XGBGradientBoostedVectorClassificationModel instance
DEBUG 2024-04-17 12:19:00,624 sensai.featuregen.feature_generator:fit_generate - Fitting and generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]]
DEBUG 2024-04-17 12:19:00,624 sensai.featuregen.feature_generator:fit - Fitting FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]
DEBUG 2024-04-17 12:19:00,631 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]
DEBUG 2024-04-17 12:19:00,973 sensai.vector_model:fit - Fitting with outputs[1]=['popularity_class'], inputs[1]=[mean_artist_popularity/float64]; N=7000 data points
INFO  2024-04-17 12:19:00,973 sensai.sklearn.sklearn_base:_fit_classifier - Fitting sklearn classifier of type XGBClassifier
INFO  2024-04-17 12:19:01,008 sensai.vector_model:fit - Fitting completed in 0.38 seconds: XGBGradientBoostedVectorClassificationModel[featureGenerator=MultiFeatureGenerator[featureGenerators=[FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]], fitArgs={}, useBalancedClassWeights=False, useLabelEncoding=True, featureGeneratorNames=[MEAN_ARTIST_FREQ_POPULAR], name=XGBoost-meanArtistFreqPopularOnly, model=XGBClassifier(base_score=None, booster=None, callbacks=None, colsample_bylevel=None, colsample_bynode=None, colsample_bytree=None, early_stopping_rounds=None, enable_categorical=False, eval_metric=None, feature_types=None, gamma=None, gpu_id=None, grow_policy=None, importance_type=None, interaction_constraints=None, learning_rate=None, max_bin=None, max_cat_threshold=None, max_cat_to_onehot=None, max_delta_step=None, max_depth=None, max_leaves=None, min_child_weight=None, missing=nan, monotone_constraints=None, n_estimators=100, n_jobs=None, num_parallel_tree=None, predictor=None, random_state=42, ...)]
DEBUG 2024-04-17 12:19:01,008 sensai.featuregen.feature_generator:generate - Generating features with MultiFeatureGenerator[featureGenerators=[FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]]]
DEBUG 2024-04-17 12:19:01,008 sensai.featuregen.feature_generator:generate - Generating features with FeatureGeneratorMeanArtistPopularity[col_target=popularity_class, name=MEAN_ARTIST_FREQ_POPULAR]
INFO  2024-04-17 12:19:01,190 sensai.evaluation.eval_util:gather_results - Evaluation results for popularity_class: ClassificationEvalStats[accuracy=0.9513333333333334, balancedAccuracy=0.5, precision[popular]=0.0, recall[popular]=0.0, F1[popular]=0.0, N=3000]
INFO  2024-04-17 12:19:01,226 sensai.evaluation.eval_util:compare_models - Model comparison results:
                                   accuracy  balancedAccuracy  precision[popular]  recall[popular]  F1[popular]
model_name
LogisticRegression-orig            0.951333          0.500000            0.000000         0.000000     0.000000
LogisticRegression                 0.957333          0.600637            0.714286         0.205479     0.319149
KNeighbors-orig                    0.911333          0.543966            0.125000         0.136986     0.130719
KNeighbors                         0.934667          0.621219            0.307692         0.273973     0.289855
RandomForest-orig                  0.951000          0.499825            0.000000         0.000000     0.000000
RandomForest                       0.957333          0.577891            0.821429         0.157534     0.264368
DecisionTree-orig                  0.951333          0.500000            0.000000         0.000000     0.000000
XGBoost                            0.958000          0.630233            0.672414         0.267123     0.382353
XGBoost-meanArtistFreqPopular      0.955333          0.625582            0.593750         0.260274     0.361905
XGBoost-meanArtistFreqPopularOnly  0.951333          0.500000            0.000000         0.000000     0.000000
INFO  2024-04-17 12:19:01,235 sensai.util.logging:run_main - Done

Process finished with exit code 0
